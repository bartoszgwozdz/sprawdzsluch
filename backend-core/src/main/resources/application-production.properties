# Konfiguracja PRODUCTION dla backend-core
spring.application.name=backend-core

# Serwer
server.port=8090

# MongoDB - URI pobierane z Kubernetes ConfigMap przez zmienną środowiskową
# spring.data.mongodb.uri zostanie nadpisane przez SPRING_DATA_MONGODB_URI

# Kafka - produkcyjna konfiguracja
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=sprawdzsluch-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Mail - konfiguracja produkcyjna
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:twojemail@gmail.com}
spring.mail.password=${MAIL_PASSWORD:appPassword}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# PayNow - produkcyjne API
paynow.apiKey=${PAYNOW_API_KEY:your_api_key}
paynow.signatureKey=${PAYNOW_SIGNATURE_KEY:your_signature_key}
paynow.apiUrl=https://paynow.pl/v1
paynow.redirectUrl=${PAYNOW_REDIRECT_URL:https://sprawdzsluch.pl/payment/return}
paynow.notifyUrl=${PAYNOW_NOTIFY_URL:https://sprawdzsluch.pl/api/paynow/webhook}

# Logging - produkcyjny poziom logowania
logging.level.root=INFO
logging.level.dev.gwozdz.sprawdzsluch=INFO
logging.level.org.springframework.data.mongodb=INFO

# MongoDB - dodatkowe ustawienia produkcyjne
spring.data.mongodb.auto-index-creation=false

# Bezpieczeństwo
server.error.include-stacktrace=never
server.error.include-message=never