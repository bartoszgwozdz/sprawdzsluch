name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types: [deploy]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    env:
      K8S_NAMESPACE: sprawdzsluch
      LOCAL_REGISTRY: localhost:5000

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Uruchom lokalny rejestr Docker
      - name: Start local registry
        run: |
          docker run -d -p 5000:5000 --name registry registry:2

      # 3️⃣ Build & push frontend locally
      - name: Build & push frontend locally
        run: |
          docker build -t ${LOCAL_REGISTRY}/frontend:latest ./frontend
          docker push ${LOCAL_REGISTRY}/frontend:latest

      # 4️⃣ Build & push backend-pdf locally
      - name: Build & push backend-pdf locally
        run: |
          docker build -t ${LOCAL_REGISTRY}/backend-pdf:latest ./backend-pdf
          docker push ${LOCAL_REGISTRY}/backend-pdf:latest

      # 5️⃣ Build & push backend-core locally
      - name: Build & push backend-core locally
        run: |
          docker build -t ${LOCAL_REGISTRY}/backend-core:latest ./backend-core
          docker push ${LOCAL_REGISTRY}/backend-core:latest

      # 6️⃣ Setup kubectl
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.30.0"

      # 7️⃣ Configure kubeconfig
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      # 8️⃣ Create MongoDB Secret
      - name: Create MongoDB Secret
        run: |
          kubectl -n $K8S_NAMESPACE create secret generic mongo-secret \
            --from-literal=mongo-root-username=${{ secrets.MONGO_ROOT_USERNAME }} \
            --from-literal=mongo-root-password=${{ secrets.MONGO_ROOT_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -

      # 9️⃣ Deploy all manifests
      - name: Deploy all manifests
        run: |
          kubectl apply -f k8s/
          kubectl rollout status statefulset/mongodb -n $K8S_NAMESPACE
          kubectl rollout status deployment/frontend -n $K8S_NAMESPACE
          kubectl rollout status deployment/backend-pdf -n $K8S_NAMESPACE
          kubectl rollout status deployment/backend-core -n $K8S_NAMESPACE
