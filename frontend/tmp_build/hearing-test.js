(()=>{var z=(d,e)=>()=>(e||d((e={exports:{}}).exports,e),e.exports);var I=z(()=>{var h=class{constructor(){this.audioContext,this.frequencies=[125,250,400,630,2e3,3200,5e3,6300,8e3,1e4,12e3,16e3,2e4],this.hearingLevels=[],this.frequencyOrder=[],this.currentFrequencyIndex=0,this.testRunning=!1,this.increaseGainInterval,this.frequencyDescentInterval,this.maxAudibleFrequency=2e4,this.referenceLevel=.001,this.currentGain=1e-5,this.currentFrequency=1e3,this.testStage=0,this.age=30,this.hearButton=null,this.testInstruction=null,this.oscillator=null,this.gainNode=null,this._isPaused=!1,this._savedFrequency=null,this._savedGain=null}unlockAudio(){this.audioContext||(this.audioContext=new(window.AudioContext||window.webkitAudioContext),console.log("AudioContext created on user gesture.")),this.audioContext.state==="suspended"&&this.audioContext.resume().then(()=>{console.log("AudioContext resumed successfully!")}).catch(e=>console.error("Error resuming AudioContext:",e))}initialize(e,t){this.hearButton=document.getElementById(e),this.testInstruction=document.getElementById(t),this.audioContext||(this.audioContext=new(window.AudioContext||window.webkitAudioContext),console.log("AudioContext initialized. State:",this.audioContext.state)),!this.oscillator&&(this.oscillator=this.audioContext.createOscillator(),this.gainNode=this.audioContext.createGain(),this.oscillator.connect(this.gainNode),this.gainNode.connect(this.audioContext.destination),this.gainNode.gain.setValueAtTime(0,this.audioContext.currentTime),this.oscillator.start())}startAdjusting1kHz(){this.testInstruction.textContent="Najpierw musimy ustawi\u0107 poziom referencyjny 0 dB. Ton o cz\u0119stotliwo\u015Bci 1kHz zacznie bardzo cicho i b\u0119dzie stopniowo zwi\u0119ksza\u0142 g\u0142o\u015Bno\u015B\u0107. Kliknij 'S\u0142ysz\u0119!' gdy tylko us\u0142yszysz d\u017Awi\u0119k.",this.currentFrequency=1e3,this.currentGain=1e-5,this.playTone(this.currentFrequency,this.currentGain),this.testRunning=!0,this.hearButton.disabled=!1,console.log("startAdjusting1kHz - currentFrequency:",this.currentFrequency,"currentGain:",this.currentGain),this.startIncreasingGain()}findMaxFrequency(){this.testInstruction.textContent="\u015Awietnie! Teraz znajdziemy Twoj\u0105 najwy\u017Csz\u0105 s\u0142yszaln\u0105 cz\u0119stotliwo\u015B\u0107. Ton rozpocznie si\u0119 od 20kHz (bardzo wysoki) i b\u0119dzie stopniowo obni\u017Cany. Kliknij 'S\u0142ysz\u0119!' w MOMENCIE gdy us\u0142yszysz d\u017Awi\u0119k.",this.currentFrequency=2e4;let e=500,t=this.referenceLevel*1.414;this.playTone(this.currentFrequency,t),this.hearButton.disabled=!1,this.testRunning=!0,clearInterval(this.frequencyDescentInterval),this.frequencyDescentInterval=setInterval(()=>{if(!this.testRunning){clearInterval(this.frequencyDescentInterval);return}if(this.currentFrequency-=e,this.currentFrequency<=0){clearInterval(this.frequencyDescentInterval),this.testRunning=!1,this.maxAudibleFrequency=0,this.testInstruction.textContent="Nie uda\u0142o si\u0119 okre\u015Bli\u0107 maksymalnej cz\u0119stotliwo\u015Bci.",this.testStage=2;return}this.playTone(this.currentFrequency,t)},1e3)}startRandomFrequencyTest(){this.prepareFrequenciesArray(),this.playNextFrequency()}prepareFrequenciesArray(){let e=this.frequencies.filter(t=>t<=this.maxAudibleFrequency);this.frequencyOrder=this.shuffleArray(e),this.currentFrequencyIndex=0,console.log("prepareFrequenciesArray - frequencyOrder:",this.frequencyOrder)}playNextFrequency(){let e=document.getElementById("frequency-counter");this.currentFrequencyIndex<this.frequencyOrder.length?(this.currentFrequency=this.frequencyOrder[this.currentFrequencyIndex],e&&(e.textContent=`Ton ${this.currentFrequencyIndex+1} / ${this.frequencyOrder.length}`),this.currentGain=1e-5,console.log("playNextFrequency - frequency:",this.currentFrequency,"currentGain:",this.currentGain,"currentFrequencyIndex:",this.currentFrequencyIndex),this.playTone(this.currentFrequency,this.currentGain),this.hearButton&&(this.hearButton.disabled=!1),this.testRunning=!0,this.startIncreasingGain()):(this.stopTone(),e&&(e.textContent="Test zako\u0144czony!"),console.log("Test complete. Final results:",this.hearingLevels),this.testRunning=!1,window.dispatchEvent(new CustomEvent("randomTestCompleted")))}startIncreasingGain(){clearInterval(this.increaseGainInterval),console.log("startIncreasingGain - currentFrequency:",this.currentFrequency),this.increaseGainInterval=setInterval(()=>{if(this.testRunning&&this.currentGain<.1){let e=this.gainNode;this.currentGain*=1.62,e.gain.setValueAtTime(this.currentGain,this.audioContext.currentTime)}else clearInterval(this.increaseGainInterval),console.log("clearInterval - currentFrequency:",this.currentFrequency,"testRunning:",this.testRunning,"currentGain >= 0.1:",this.currentGain>=.1)},666)}playTone(e,t){!this.oscillator||!this.gainNode||(this.oscillator.frequency.setValueAtTime(e,this.audioContext.currentTime),this.gainNode.gain.setTargetAtTime(t,this.audioContext.currentTime,.01))}stopTone(){this.gainNode&&this.gainNode.gain.setTargetAtTime(0,this.audioContext.currentTime,.01)}stopCurrentTest(){console.log("Executing stopCurrentTest..."),this.testRunning=!1,this.increaseGainInterval&&clearInterval(this.increaseGainInterval),this.frequencyDescentInterval&&clearInterval(this.frequencyDescentInterval),this.stopTone(),console.log("Test sound stopped and intervals cleared.")}shuffleArray(e){for(let t=e.length-1;t>0;t--){let r=Math.floor(Math.random()*(t+1));[e[t],e[r]]=[e[r],e[t]]}return e}isTestComplete(){return this.testStage===2&&this.currentFrequencyIndex>=this.frequencyOrder.length}recordHearing(){this.hearButton&&(this.hearButton.disabled=!0),this.testRunning=!1,clearInterval(this.frequencyDescentInterval),clearInterval(this.increaseGainInterval),this.stopTone(),this.testStage===0?(this.referenceLevel=this.currentGain,this.hearingLevels.push({frequency:this.currentFrequency,gain:this.currentGain}),console.log(this.hearingLevels),console.log("recordHearing - referenceLevel set to:",this.referenceLevel,"currentFrequency:",this.currentFrequency),this.testStage=1):this.testStage===1?(this.maxAudibleFrequency=this.currentFrequency,this.testStage=2):this.testStage===2&&(this.hearingLevels.push({frequency:this.currentFrequency,gain:this.currentGain}),this.currentFrequencyIndex++,this.isTestComplete()?(console.log("Random frequency test completed."),window.dispatchEvent(new CustomEvent("randomTestCompleted"))):this.playNextFrequency())}displayResults(e){let t=document.getElementById(e);if(!t){console.error(`Results container with ID "${e}" not found.`);return}let r=new Map;this.hearingLevels.forEach(n=>r.set(n.frequency,n.gain));let c=[...this.hearingLevels.entries()].reduce((n,i)=>n.gain>i.gain?n:i);console.log("displayResults - resultsMap:",r);let o=r.get(1e3)||this.referenceLevel;this.frequencyOrder.push(1e3);let f=this.frequencyOrder.sort((n,i)=>n-i),y="<th>Frequency</th>",u="<td><strong>Level (dB)</strong></td>",g=0,q=0;f.forEach(n=>{let i=r.get(n);if(y+=`<th>${n<1e3?n+" Hz":n/1e3+" kHz"}</th>`,i&&o>0){let v=20*Math.log10(o/i),F=this.getIsofonicCorrection(n),s=v+F;s<g&&(g=s),s>q&&(q=s);let l="#ccffcc";s<-20?l="#ffcccc":s<-10&&(l="#ffffcc"),u+=`<td style="background-color: ${l};">${s.toFixed(1)} dB</td>`}else u+="<td>N/A</td>"});let p=f[0]||0,m=this.maxAudibleFrequency||0,x=this.age<20?"20Hz-20kHz":this.age<40?"20Hz-17kHz":this.age<60?"20Hz-15kHz":"20Hz-12kHz";t.innerHTML=`
      <style>
        .results-table { width: 100%; border-collapse: collapse; text-align: center; font-size: 0.875rem; }
        .results-table th, .results-table td { border: 1px solid #dde3e1; padding: 8px; }
        .results-table th { background-color: #f1f4f3; }
        .results-summary { margin-top: 20px; padding: 15px; background-color: #f9f9f9; border-radius: 8px; text-align: left; }
        .results-summary h3 { font-weight: bold; margin-bottom: 10px; font-size: 1.1rem; }
        .results-summary p { margin-bottom: 5px; }
      </style>
      <table class="results-table">
        <thead><tr>${y}</tr></thead>
        <tbody><tr>${u}</tr></tbody>
      </table>
      <div class="results-summary">
        <h3>Your Audible Range</h3>
        <p>Lowest tested frequency: <strong>${p} Hz</strong></p>
        <p>Highest audible frequency: <strong>${m} Hz</strong></p>
        <p>Normal range for your age (${this.age}): <strong>${x}</strong></p>
        <h3 style="margin-top: 15px;">Interpretation</h3>
        <p>A value of 0 dB means you hear that tone as well as the 1 kHz reference tone. Negative values mean you need a higher volume to hear that frequency.</p>
        <div style="margin-top: 15px; font-style: italic; font-size: 0.8rem;">
            <p>Note: This test is for informational purposes only and does not replace a professional hearing examination.</p>
        </div>
      </div>
    `}getIsofonicCorrection(e){let t=[{freq:20,correction:71.5},{freq:25,correction:65},{freq:31.5,correction:59},{freq:40,correction:53},{freq:50,correction:47.5},{freq:63,correction:42.5},{freq:80,correction:37.5},{freq:100,correction:33},{freq:125,correction:8.5},{freq:160,correction:24},{freq:200,correction:20},{freq:250,correction:5},{freq:315,correction:12.5},{freq:400,correction:4.5},{freq:500,correction:7},{freq:630,correction:5},{freq:800,correction:3},{freq:1e3,correction:0},{freq:1250,correction:-2},{freq:1600,correction:-4},{freq:2e3,correction:-5.5},{freq:2500,correction:-6},{freq:3150,correction:-5},{freq:4e3,correction:-3},{freq:5e3,correction:0},{freq:6300,correction:1.5},{freq:8e3,correction:2.5},{freq:1e4,correction:3},{freq:12500,correction:3},{freq:16e3,correction:2},{freq:2e4,correction:0}],r=0,c=1/0;for(let a of t){let o=Math.abs(a.freq-e);o<c&&(c=o,r=a.correction)}return r}pauseAudio(){this.audioContext&&this.oscillator&&(this._savedFrequency=this.currentFrequency,this._savedGain=this.currentGain,this._isPaused=!0,this.oscillator.stop(),this.oscillator=null)}resumeAudio(){this.audioContext&&this._isPaused&&(this._isPaused=!1,this.oscillator=this.audioContext.createOscillator(),this.oscillator.type="sine",this.oscillator.frequency.value=this._savedFrequency||1e3,this.gainNode=this.audioContext.createGain(),this.gainNode.gain.value=this._savedGain||0,this.oscillator.connect(this.gainNode),this.gainNode.connect(this.audioContext.destination),this.oscillator.start(),this.testPhase==="adjusting1kHz"?this.continueAdjusting1kHz():this.testPhase==="maxFrequency"?this.continueMaxFrequencyTest():this.testPhase==="randomFrequency"&&this.continueRandomFrequencyTest())}stopAudio(){this.audioContext&&(this.oscillator&&(this.oscillator.stop(),this.oscillator=null),this._isPaused=!1,this._savedFrequency=null,this._savedGain=null)}continueAdjusting1kHz(){this._savedFrequency&&this._savedGain}continueMaxFrequencyTest(){}continueRandomFrequencyTest(){}};window.hearingTestInstance=new h});I();})();
